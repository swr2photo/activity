'use client';
import React, { useState, useEffect } from 'react';
import { Alert, Button, Box, Typography } from '@mui/material';

interface LocationCheckerProps {
  allowedLocation: {
    latitude: number;
    longitude: number;
    radius: number;
  };
  onLocationVerified: (location: { latitude: number; longitude: number }) => void;
  onLocationError: (error: string) => void;
}

const LocationChecker: React.FC<LocationCheckerProps> = ({
  allowedLocation,
  onLocationVerified,
  onLocationError
}) => {
  const [securityError, setSecurityError] = useState<boolean>(false);
  const [permissionDenied, setPermissionDenied] = useState<boolean>(false);

  const calculateDistance = (
    lat1: number,
    lon1: number,
    lat2: number,
    lon2: number
  ): number => {
    const R = 6371e3; // Earth's radius in meters
    const œÜ1 = (lat1 * Math.PI) / 180;
    const œÜ2 = (lat2 * Math.PI) / 180;
    const ŒîœÜ = ((lat2 - lat1) * Math.PI) / 180;
    const ŒîŒª = ((lon2 - lon1) * Math.PI) / 180;

    const a =
      Math.sin(ŒîœÜ / 2) * Math.sin(ŒîœÜ / 2) +
      Math.cos(œÜ1) * Math.cos(œÜ2) * Math.sin(ŒîŒª / 2) * Math.sin(ŒîŒª / 2);
    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));

    return R * c;
  };

  const isSecureContext = (): boolean => {
    return window.isSecureContext || 
           window.location.protocol === 'https:' || 
           window.location.hostname === 'localhost' ||
           window.location.hostname === '127.0.0.1';
  };

  const checkLocation = () => {
    // Check if running in secure context
    if (!isSecureContext()) {
      setSecurityError(true);
      onLocationError('‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ HTTPS ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ https:// ‡∏´‡∏£‡∏∑‡∏≠ localhost');
      return;
    }

    if (!navigator.geolocation) {
      onLocationError('‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á');
      return;
    }

    navigator.geolocation.getCurrentPosition(
      (position) => {
        const { latitude, longitude } = position.coords;
        const distance = calculateDistance(
          latitude,
          longitude,
          allowedLocation.latitude,
          allowedLocation.longitude
        );

        if (distance <= allowedLocation.radius) {
          onLocationVerified({ latitude, longitude });
        } else {
          onLocationError(
            `‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡∏ô‡∏≠‡∏Å‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î (‡∏´‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏à‡∏∏‡∏î‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ${Math.round(distance)} ‡πÄ‡∏°‡∏ï‡∏£)`
          );
        }
      },
      (error) => {
        let errorMessage = '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏î‡πâ';
        
        switch (error.code) {
          case error.PERMISSION_DENIED:
            setPermissionDenied(true);
            errorMessage = '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏ô‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå';
            break;
          case error.POSITION_UNAVAILABLE:
            errorMessage = '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö GPS ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï';
            break;
          case error.TIMEOUT:
            errorMessage = '‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≤‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà';
            break;
        }

        // Check if it's a security error
        if (error.message?.includes('Only secure origins are allowed')) {
          setSecurityError(true);
          errorMessage = '‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ HTTPS ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á';
        }

        onLocationError(errorMessage);
      },
      {
        enableHighAccuracy: true,
        timeout: 15000,
        maximumAge: 60000
      }
    );
  };

  const retryLocationCheck = () => {
    setSecurityError(false);
    setPermissionDenied(false);
    checkLocation();
  };

  useEffect(() => {
    checkLocation();
  }, []);

  // Render helpful UI for common issues
  if (securityError) {
    return (
      <Box sx={{ mt: 2 }}>
        <Alert severity="error" sx={{ mb: 2 }}>
          <Typography variant="h6" gutterBottom>
            üîí ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ (HTTPS)
          </Typography>
          <Typography variant="body2" paragraph>
            ‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏™‡∏°‡∏±‡∏¢‡πÉ‡∏´‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ HTTPS ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á GPS
          </Typography>
          
          <Typography variant="subtitle2" gutterBottom>
            ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:
          </Typography>
          <Typography variant="body2" component="div">
            <strong>‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏û‡∏±‡∏í‡∏ô‡∏≤:</strong>
            <br />‚Ä¢ ‡πÉ‡∏ä‡πâ <code>https://localhost:3000</code> ‡πÅ‡∏ó‡∏ô <code>http://</code>
            <br />‚Ä¢ ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ ngrok ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö HTTPS tunnel
            <br />‚Ä¢ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á mkcert ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö local HTTPS certificate
          </Typography>
          
          <Typography variant="body2" sx={{ mt: 1 }}>
            <strong>‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ:</strong>
            <br />‚Ä¢ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ú‡πà‡∏≤‡∏ô HTTPS URL ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
          </Typography>
        </Alert>
        
        <Button variant="outlined" onClick={retryLocationCheck} fullWidth>
          ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
        </Button>
      </Box>
    );
  }

  if (permissionDenied) {
    return (
      <Box sx={{ mt: 2 }}>
        <Alert severity="warning" sx={{ mb: 2 }}>
          <Typography variant="h6" gutterBottom>
            üìç ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
          </Typography>
          <Typography variant="body2" paragraph>
            ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏ô‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå
          </Typography>
          
          <Typography variant="subtitle2" gutterBottom>
            ‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï:
          </Typography>
          <Typography variant="body2" component="div">
            ‚Ä¢ ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô üîí ‡∏´‡∏£‡∏∑‡∏≠ üìç ‡πÉ‡∏ô address bar
            <br />‚Ä¢ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "Allow" ‡∏´‡∏£‡∏∑‡∏≠ "‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï" ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Location
            <br />‚Ä¢ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
          </Typography>
        </Alert>
        
        <Button variant="outlined" onClick={retryLocationCheck} fullWidth>
          ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÅ‡∏•‡πâ‡∏ß
        </Button>
      </Box>
    );
  }

  return null;
};

export default LocationChecker;